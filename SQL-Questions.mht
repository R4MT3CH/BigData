MIME-Version: 1.0
Content-Location: file:///C:/2D764A33/SQL-Questions.htm
Content-Transfer-Encoding: quoted-printable
Content-Type: text/html; charset="utf-8"

<html xmlns:o=3D"urn:schemas-microsoft-com:office:office"
xmlns:dt=3D"uuid:C2F41010-65B3-11d1-A29F-00AA00C14882"
xmlns=3D"http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=3DContent-Type content=3D"text/html; charset=3Dutf-8">
<meta name=3DProgId content=3DOneNote.File>
<meta name=3DGenerator content=3D"Microsoft OneNote 15">
<link id=3DMain-File rel=3DMain-File href=3DSQL-Questions.htm>
<link rel=3DFile-List href=3D"SQL-Questions_files/filelist.xml">
</head>

<body lang=3Den-US style=3D'font-family:Calibri;font-size:11.0pt'>

<div style=3D'direction:ltr;border-width:100%'>

<div style=3D'direction:ltr;margin-top:0in;margin-left:0in;width:6.225in'>

<div style=3D'direction:ltr;margin-top:0in;margin-left:0in;width:5.2951in'>

<p style=3D'margin:0in;font-family:"Calibri Light";font-size:20.0pt'>1. Typ=
es of
commands and their examples.</p>

</div>

<div style=3D'direction:ltr;margin-top:.0423in;margin-left:0in;width:2.1833=
in'>

<p style=3D'margin:0in;font-family:Calibri;font-size:10.0pt;color:#767676'>=
Tuesday,
July 30, 2024</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:10.0pt;color:#767676'>=
6:19
AM</p>

</div>

<div style=3D'direction:ltr;margin-top:.434in;margin-left:0in;width:6.225in=
'>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>1. Data Defini=
tion
Language (DDL)</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>CREATE: Define=
s new
database objects like tables.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>ALTER: Modifies
existing database structures.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>DROP: Deletes
database objects.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>TRUNCATE: Remo=
ves
all records from a table.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>2. Data Manipu=
lation
Language (DML)</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>INSERT: Adds n=
ew
records to tables.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>UPDATE: Modifi=
es
existing records.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>DELETE: Removes
records from tables.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>3. Data Query
Language (DQL)</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>SELECT: Retrie=
ves
data from tables.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>4. Transaction
Control Language (TCL)</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>COMMIT: Saves =
all
changes made during the transaction.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>ROLLBACK: Reve=
rts
all changes made during the transaction.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>SAVEPOINT: Set=
s a
point within a transaction to which you can roll back.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>RELEASE SAVEPO=
INT:
Removes a savepoint.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>5. Data Control
Language (DCL)</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>GRANT: Gives u=
sers
access privileges.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>REVOKE: Removes
access privileges.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>6. Data
Administration Commands</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>BACKUP DATABAS=
E:
Creates a backup of the database.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>RESTORE DATABA=
SE:
Restores the database from a backup.</p>

</div>

</div>

</div>

<p style=3D'margin:0in'>&nbsp;</p>

<p style=3D'margin:0in'>&nbsp;</p>

<p style=3D'margin:0in'>&nbsp;</p>

<div style=3D'direction:ltr;border-width:100%'>

<div style=3D'direction:ltr;margin-top:0in;margin-left:0in;width:6.8083in'>

<div style=3D'direction:ltr;margin-top:0in;margin-left:0in;width:5.7798in'>

<p style=3D'margin:0in;font-family:"Calibri Light";font-size:20.0pt'>2. Wha=
t is
Normalization and denormalization?</p>

</div>

<div style=3D'direction:ltr;margin-top:.0423in;margin-left:0in;width:2.1833=
in'>

<p style=3D'margin:0in;font-family:Calibri;font-size:10.0pt;color:#767676'>=
Tuesday,
July 30, 2024</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:10.0pt;color:#767676'>=
9:43
AM</p>

</div>

<div style=3D'direction:ltr;margin-top:.434in;margin-left:.25in;width:5.805=
5in'>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>Normalization<=
/p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>Normalization =
is the
process of organizing the fields and tables of a relational database to
minimize redundancy and dependency. Its goal is to reduce data anomalies and
improve data integrity. Normalization involves dividing a database into two=
 or
more tables and defining relationships between them. The process follows a
series of steps called normal forms, each with specific rules to ensure
database efficiency.</p>

</div>

<div style=3D'direction:ltr;margin-top:.5812in;margin-left:.25in;width:6.55=
83in'>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>Denormalizatio=
n</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>Denormalizatio=
n is
the process of combining tables to reduce the complexity of joins and to
improve database read performance. This involves adding redundant data to
tables to achieve faster query performance by reducing the number of joins.
Denormalization is often used in read-heavy environments where read perform=
ance
is more critical than write performance.</p>

</div>

</div>

</div>

<p style=3D'margin:0in'>&nbsp;</p>

<p style=3D'margin:0in'>&nbsp;</p>

<p style=3D'margin:0in'>&nbsp;</p>

<div style=3D'direction:ltr;border-width:100%'>

<div style=3D'direction:ltr;margin-top:0in;margin-left:0in;width:5.3909in'>

<div style=3D'direction:ltr;margin-top:0in;margin-left:0in;width:3.3305in'>

<p style=3D'margin:0in;font-family:"Calibri Light";font-size:20.0pt'>3. Exp=
lain
1NF, 2NF, 3NF.</p>

</div>

<div style=3D'direction:ltr;margin-top:.0423in;margin-left:0in;width:2.1833=
in'>

<p style=3D'margin:0in;font-family:Calibri;font-size:10.0pt;color:#767676'>=
Tuesday,
July 30, 2024</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:10.0pt;color:#767676'>=
9:49
AM</p>

</div>

<div style=3D'direction:ltr;margin-top:.684in;margin-left:.25in;width:5.140=
9in'>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>First Normal F=
orm
(1NF)</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>A table is in =
1NF
if:</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>All columns co=
ntain
atomic (indivisible) values.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>Each column co=
ntains
values of a single type.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>Each column ha=
s a
unique name.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>The order in w=
hich
data is stored does not matter.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>--------------=
---------------------------------------------------------------------</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>Second Normal =
Form
(2NF)</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>A table is in =
2NF
if:</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>It is in 1NF.<=
/p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>All non-key
attributes are fully functionally dependent on the primary key.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>--------------=
---------------------------------------------------------------------------=
------</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>Third Normal F=
orm
(3NF)</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>A table is in =
3NF
if:</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>It is in 2NF.<=
/p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>All non-key
attributes are not transitively dependent on the primary key.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

</div>

</div>

</div>

<p style=3D'margin:0in'>&nbsp;</p>

<p style=3D'margin:0in'>&nbsp;</p>

<p style=3D'margin:0in'>&nbsp;</p>

<div style=3D'direction:ltr;border-width:100%'>

<div style=3D'direction:ltr;margin-top:0in;margin-left:0in;width:8.0in'>

<div style=3D'direction:ltr;margin-top:0in;margin-left:0in;width:8.0in'>

<p style=3D'margin:0in;font-family:"Calibri Light";font-size:20.0pt'>4. Sha=
re use
case where you had to do denormalization in database..</p>

</div>

<div style=3D'direction:ltr;margin-top:.0423in;margin-left:0in;width:2.1833=
in'>

<p style=3D'margin:0in;font-family:Calibri;font-size:10.0pt;color:#767676'>=
Tuesday,
July 30, 2024</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:10.0pt;color:#767676'>=
9:56
AM</p>

</div>

<div style=3D'direction:ltr;margin-top:.434in;margin-left:0in;width:4.5048i=
n'>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>Example of
Denormalization:</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>We had three
normalized tables: Sensors, Readings, and Events.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>CREATE TABLE S=
ensors
(</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'><span
style=3D'mso-spacerun:yes'>    </span>SensorID INT PRIMARY KEY,</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'><span
style=3D'mso-spacerun:yes'>    </span>SensorName VARCHAR(50),</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'><span
style=3D'mso-spacerun:yes'>    </span>SensorType VARCHAR(50)</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>);</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>CREATE TABLE
Readings (</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'><span
style=3D'mso-spacerun:yes'>    </span>ReadingID INT PRIMARY KEY,</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'><span
style=3D'mso-spacerun:yes'>    </span>SensorID INT,</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'><span
style=3D'mso-spacerun:yes'>    </span>ReadingValue FLOAT,</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'><span
style=3D'mso-spacerun:yes'>    </span>ReadingTime TIMESTAMP,</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'><span
style=3D'mso-spacerun:yes'>    </span>FOREIGN KEY (SensorID) REFERENCES
Sensors(SensorID)</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>);</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>CREATE TABLE E=
vents
(</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'><span
style=3D'mso-spacerun:yes'>    </span>EventID INT PRIMARY KEY,</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'><span
style=3D'mso-spacerun:yes'>    </span>SensorID INT,</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'><span
style=3D'mso-spacerun:yes'>    </span>EventDescription VARCHAR(255),</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'><span
style=3D'mso-spacerun:yes'>    </span>EventTime TIMESTAMP,</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'><span
style=3D'mso-spacerun:yes'>    </span>FOREIGN KEY (SensorID) REFERENCES
Sensors(SensorID)</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>);</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>CREATE TABLE
SensorData (</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'><span
style=3D'mso-spacerun:yes'>    </span>SensorID INT,</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'><span
style=3D'mso-spacerun:yes'>    </span>SensorName VARCHAR(50),</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'><span
style=3D'mso-spacerun:yes'>    </span>SensorType VARCHAR(50),</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'><span
style=3D'mso-spacerun:yes'>    </span>ReadingValue FLOAT,</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'><span
style=3D'mso-spacerun:yes'>    </span>ReadingTime TIMESTAMP,</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'><span
style=3D'mso-spacerun:yes'>    </span>EventDescription VARCHAR(255),</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'><span
style=3D'mso-spacerun:yes'>    </span>EventTime TIMESTAMP</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>);</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

</div>

</div>

</div>

<p style=3D'margin:0in'>&nbsp;</p>

<p style=3D'margin:0in'>&nbsp;</p>

<p style=3D'margin:0in'>&nbsp;</p>

<div style=3D'direction:ltr;border-width:100%'>

<div style=3D'direction:ltr;margin-top:0in;margin-left:0in;width:7.5361in'>

<div style=3D'direction:ltr;margin-top:0in;margin-left:0in;width:5.1708in'>

<p style=3D'margin:0in;font-family:"Calibri Light";font-size:20.0pt'>5.&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;What
is primary key and foreign key?</p>

</div>

<div style=3D'direction:ltr;margin-top:.0423in;margin-left:0in;width:2.2541=
in'>

<p style=3D'margin:0in;font-family:Calibri;font-size:10.0pt;color:#767676'>=
Tuesday,
July 30, 2024</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:10.0pt;color:#767676'>=
10:14
AM</p>

</div>

<div style=3D'direction:ltr;margin-top:.434in;margin-left:0in;width:7.5361i=
n'>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>A primary key =
is a
unique identifier for each record in a database table. It ensures that each
record can be uniquely identified and is used to establish and enforce enti=
ty
integrity. A primary key must have the following characteristics:</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>&nbsp;</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>Unique: No two
records can have the same primary key value.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>Non-null: A pr=
imary
key cannot contain NULL values.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>Immutable: The
values in a primary key should not change over time.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>&nbsp;</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>&nbsp;</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>Foreign Key</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>A foreign key =
is a
column or a set of columns in one table that establishes a link between the
data in two tables. It is used to maintain referential integrity by ensuring
that the value in one table must match a value in another table, typically =
the
primary key of the other table.</p>

</div>

</div>

</div>

<p style=3D'margin:0in'>&nbsp;</p>

<p style=3D'margin:0in'>&nbsp;</p>

<p style=3D'margin:0in'>&nbsp;</p>

<div style=3D'direction:ltr;border-width:100%'>

<div style=3D'direction:ltr;margin-top:0in;margin-left:0in;width:7.6041in'>

<div style=3D'direction:ltr;margin-top:0in;margin-left:0in;width:5.1312in'>

<p style=3D'margin:0in;font-family:"Calibri Light";font-size:20.0pt'>6.&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;what
is alternate and candidate key?</p>

</div>

<div style=3D'direction:ltr;margin-top:.0423in;margin-left:0in;width:2.2541=
in'>

<p style=3D'margin:0in;font-family:Calibri;font-size:10.0pt;color:#767676'>=
Tuesday,
July 30, 2024</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:10.0pt;color:#767676'>=
10:16
AM</p>

</div>

<div style=3D'direction:ltr;margin-top:.434in;margin-left:0in;width:7.6041i=
n'>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>Candidate Key<=
/p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>A candidate ke=
y is a
column, or a set of columns, in a database table that can uniquely identify=
 any
record in that table. A table can have multiple candidate keys, each of whi=
ch
can serve as a unique identifier. Each candidate key must have the following
properties:</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>&nbsp;</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>Unique: No two=
 rows
can have the same value(s) for the candidate key.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>Non-null: The
candidate key cannot contain NULL values.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>Minimal: No su=
bset
of the candidate key can be unique; it is the smallest set of attributes th=
at
can uniquely identify a record.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>&nbsp;</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>Alternate Key<=
/p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>An alternate k=
ey is
any candidate key that is not chosen as the primary key. In other words,
alternate keys are candidate keys that could have been selected as the prim=
ary
key but were not.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

</div>

</div>

</div>

<p style=3D'margin:0in'>&nbsp;</p>

<p style=3D'margin:0in'>&nbsp;</p>

<p style=3D'margin:0in'>&nbsp;</p>

<div style=3D'direction:ltr;border-width:100%'>

<div style=3D'direction:ltr;margin-top:0in;margin-left:0in;width:7.5743in'>

<div style=3D'direction:ltr;margin-top:0in;margin-left:0in;width:4.2486in'>

<p style=3D'margin:0in;font-family:"Calibri Light";font-size:20.0pt'>7.&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;What
are window functions?</p>

</div>

<div style=3D'direction:ltr;margin-top:.0423in;margin-left:0in;width:2.2541=
in'>

<p style=3D'margin:0in;font-family:Calibri;font-size:10.0pt;color:#767676'>=
Tuesday,
July 30, 2024</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:10.0pt;color:#767676'>=
10:25
AM</p>

</div>

<div style=3D'direction:ltr;margin-top:.684in;margin-left:0in;width:7.5743i=
n'>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>Window functio=
ns in
SQL perform calculations across a set of table rows that are somehow relate=
d to
the current row. Unlike aggregate functions, which return a single result f=
or a
group of rows, window functions can return multiple rows for each partition=
 or
frame.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>&nbsp;</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>&nbsp;</p>

</div>

</div>

</div>

<p style=3D'margin:0in'>&nbsp;</p>

<p style=3D'margin:0in'>&nbsp;</p>

<p style=3D'margin:0in'>&nbsp;</p>

<div style=3D'direction:ltr;border-width:100%'>

<div style=3D'direction:ltr;margin-top:0in;margin-left:0in;width:8.0in'>

<div style=3D'direction:ltr;margin-top:0in;margin-left:0in;width:8.0in'>

<p style=3D'margin:0in;font-family:"Calibri Light";font-size:20.0pt'>8.&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Explain
Ranking Functions? GIven a small table , write the output.</p>

</div>

<div style=3D'direction:ltr;margin-top:.0423in;margin-left:0in;width:2.2541=
in'>

<p style=3D'margin:0in;font-family:Calibri;font-size:10.0pt;color:#767676'>=
Tuesday,
July 30, 2024</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:10.0pt;color:#767676'>=
10:31
AM</p>

</div>

<div style=3D'direction:ltr;margin-top:.434in;margin-left:.175in;width:7.36=
11in'>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>Ranking Functi=
ons in
SQL</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>Ranking functi=
ons in
SQL assign a rank or row number to each row within a partition of a result =
set.
These functions are useful for tasks like ordering results and determining =
the
position of a row within a set.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>Example and Ou=
tput:</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>Assume we have=
 the
following Employees table:</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

<div style=3D'direction:ltr'>

<table border=3D1 cellpadding=3D0 cellspacing=3D0 valign=3Dtop style=3D'dir=
ection:ltr;
 border-collapse:collapse;border-style:solid;border-color:#A3A3A3;border-wi=
dth:
 1pt' title=3D"" summary=3D"">
 <tr>
  <td style=3D'border-style:solid;border-color:#A3A3A3;border-width:1pt;
  vertical-align:top;width:1.002in;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>EmployeeID <=
/p>
  </td>
  <td style=3D'border-style:solid;border-color:#A3A3A3;border-width:1pt;
  vertical-align:top;width:.6673in;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>Name</p>
  </td>
  <td style=3D'border-style:solid;border-color:#A3A3A3;border-width:1pt;
  vertical-align:top;width:1.0125in;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Salary</p>
  </td>
 </tr>
 <tr>
  <td style=3D'border-style:solid;border-color:#A3A3A3;border-width:1pt;
  vertical-align:top;width:.9826in;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>1&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
  </td>
  <td style=3D'border-style:solid;border-color:#A3A3A3;border-width:1pt;
  vertical-align:top;width:.6868in;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>Alice&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
  </td>
  <td style=3D'border-style:solid;border-color:#A3A3A3;border-width:1pt;
  vertical-align:top;width:.9083in;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>50000</p>
  </td>
 </tr>
 <tr>
  <td style=3D'border-style:solid;border-color:#A3A3A3;border-width:1pt;
  vertical-align:top;width:.9826in;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>2&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
  </td>
  <td style=3D'border-style:solid;border-color:#A3A3A3;border-width:1pt;
  vertical-align:top;width:.6868in;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>Bob&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
  </td>
  <td style=3D'border-style:solid;border-color:#A3A3A3;border-width:1pt;
  vertical-align:top;width:.9083in;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>60000</p>
  </td>
 </tr>
 <tr>
  <td style=3D'border-style:solid;border-color:#A3A3A3;border-width:1pt;
  vertical-align:top;width:.9826in;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>3&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
  </td>
  <td style=3D'border-style:solid;border-color:#A3A3A3;border-width:1pt;
  vertical-align:top;width:.6673in;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>Charlie</p>
  </td>
  <td style=3D'border-style:solid;border-color:#A3A3A3;border-width:1pt;
  vertical-align:top;width:.9083in;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>60000</p>
  </td>
 </tr>
 <tr>
  <td style=3D'border-style:solid;border-color:#A3A3A3;border-width:1pt;
  vertical-align:top;width:.9826in;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>4&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
  </td>
  <td style=3D'border-style:solid;border-color:#A3A3A3;border-width:1pt;
  vertical-align:top;width:.6673in;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>David</p>
  </td>
  <td style=3D'border-style:solid;border-color:#A3A3A3;border-width:1pt;
  vertical-align:top;width:.9083in;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>55000</p>
  </td>
 </tr>
 <tr>
  <td style=3D'border-style:solid;border-color:#A3A3A3;border-width:1pt;
  vertical-align:top;width:.9826in;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>5&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
  </td>
  <td style=3D'border-style:solid;border-color:#A3A3A3;border-width:1pt;
  vertical-align:top;width:.6868in;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>Eve&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
  </td>
  <td style=3D'border-style:solid;border-color:#A3A3A3;border-width:1pt;
  vertical-align:top;width:.9083in;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>70000</p>
  </td>
 </tr>
</table>

</div>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>Using RANK():<=
/p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>SELECT Employe=
eID,
Name, Salary,</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'><span
style=3D'mso-spacerun:yes'>       </span>RANK() OVER (ORDER BY Salary=
 DESC) AS
Rank</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>FROM Employees=
;</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>Output:</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

<div style=3D'direction:ltr'>

<table border=3D1 cellpadding=3D0 cellspacing=3D0 valign=3Dtop style=3D'dir=
ection:ltr;
 border-collapse:collapse;border-style:solid;border-color:#A3A3A3;border-wi=
dth:
 1pt' title=3D"" summary=3D"">
 <tr>
  <td style=3D'border-style:solid;border-color:#A3A3A3;border-width:1pt;
  vertical-align:top;width:1.2215in;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>EmployeeID&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
  </td>
  <td style=3D'border-style:solid;border-color:#A3A3A3;border-width:1pt;
  vertical-align:top;width:.7215in;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>Name&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
  </td>
  <td style=3D'border-style:solid;border-color:#A3A3A3;border-width:1pt;
  vertical-align:top;width:.7215in;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>Salary&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
  </td>
  <td style=3D'border-style:solid;border-color:#A3A3A3;border-width:1pt;
  vertical-align:top;width:.5in;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>Rank</p>
  </td>
 </tr>
 <tr>
  <td style=3D'border-style:solid;border-color:#A3A3A3;border-width:1pt;
  vertical-align:top;width:1.202in;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>5&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
  </td>
  <td style=3D'border-style:solid;border-color:#A3A3A3;border-width:1pt;
  vertical-align:top;width:.7215in;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>Eve&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
  </td>
  <td style=3D'border-style:solid;border-color:#A3A3A3;border-width:1pt;
  vertical-align:top;width:.7215in;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>70000&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
  </td>
  <td style=3D'border-style:solid;border-color:#A3A3A3;border-width:1pt;
  vertical-align:top;width:.5in;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>1</p>
  </td>
 </tr>
 <tr>
  <td style=3D'border-style:solid;border-color:#A3A3A3;border-width:1pt;
  vertical-align:top;width:1.202in;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>2&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
  </td>
  <td style=3D'border-style:solid;border-color:#A3A3A3;border-width:1pt;
  vertical-align:top;width:.702in;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>Bob</p>
  </td>
  <td style=3D'border-style:solid;border-color:#A3A3A3;border-width:1pt;
  vertical-align:top;width:.702in;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>60000</p>
  </td>
  <td style=3D'border-style:solid;border-color:#A3A3A3;border-width:1pt;
  vertical-align:top;width:.5in;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>2</p>
  </td>
 </tr>
 <tr>
  <td style=3D'border-style:solid;border-color:#A3A3A3;border-width:1pt;
  vertical-align:top;width:1.202in;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>3&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
  </td>
  <td style=3D'border-style:solid;border-color:#A3A3A3;border-width:1pt;
  vertical-align:top;width:.7215in;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>Charlie&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
  </td>
  <td style=3D'border-style:solid;border-color:#A3A3A3;border-width:1pt;
  vertical-align:top;width:.7215in;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>60000&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
  </td>
  <td style=3D'border-style:solid;border-color:#A3A3A3;border-width:1pt;
  vertical-align:top;width:.5in;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>2</p>
  </td>
 </tr>
 <tr>
  <td style=3D'border-style:solid;border-color:#A3A3A3;border-width:1pt;
  vertical-align:top;width:1.202in;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>4&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
  </td>
  <td style=3D'border-style:solid;border-color:#A3A3A3;border-width:1pt;
  vertical-align:top;width:.7215in;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>David&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
  </td>
  <td style=3D'border-style:solid;border-color:#A3A3A3;border-width:1pt;
  vertical-align:top;width:.7215in;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>55000&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
  </td>
  <td style=3D'border-style:solid;border-color:#A3A3A3;border-width:1pt;
  vertical-align:top;width:.5in;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>4</p>
  </td>
 </tr>
 <tr>
  <td style=3D'border-style:solid;border-color:#A3A3A3;border-width:1pt;
  vertical-align:top;width:1.202in;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>1&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
  </td>
  <td style=3D'border-style:solid;border-color:#A3A3A3;border-width:1pt;
  vertical-align:top;width:.7215in;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>Alice&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
  </td>
  <td style=3D'border-style:solid;border-color:#A3A3A3;border-width:1pt;
  vertical-align:top;width:.7215in;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>50000&nbsp;&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
  </td>
  <td style=3D'border-style:solid;border-color:#A3A3A3;border-width:1pt;
  vertical-align:top;width:.5in;padding:2.0pt 3.0pt 2.0pt 3.0pt'>
  <p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>5</p>
  </td>
 </tr>
</table>

</div>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

</div>

</div>

</div>

<p style=3D'margin:0in'>&nbsp;</p>

<p style=3D'margin:0in'>&nbsp;</p>

<p style=3D'margin:0in'>&nbsp;</p>

<div style=3D'direction:ltr;border-width:100%'>

<div style=3D'direction:ltr;margin-top:0in;margin-left:0in;width:8.0in'>

<div style=3D'direction:ltr;margin-top:0in;margin-left:0in;width:8.0in'>

<p style=3D'margin:0in;font-family:"Calibri Light";font-size:20.0pt'>9.&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Types
of Joins? With example and use case. All the number of records return and e=
xact
records.</p>

</div>

<div style=3D'direction:ltr;margin-top:.0423in;margin-left:0in;width:2.2541=
in'>

<p style=3D'margin:0in;font-family:Calibri;font-size:10.0pt;color:#767676'>=
Tuesday,
July 30, 2024</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:10.0pt;color:#767676'>=
11:10
AM</p>

</div>

<div style=3D'direction:ltr;margin-top:.5951in;margin-left:.25in;width:7.30=
9in'>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>Joins in SQL a=
re
used to combine rows from two or more tables based on a related column betw=
een
them. Here are the main types of joins:</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>INNER JOIN</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>LEFT JOIN (LEFT
OUTER JOIN)</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>RIGHT JOIN (RI=
GHT
OUTER JOIN)</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>FULL OUTER JOI=
N</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>CROSS JOIN</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>SELF JOIN</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>1. INNER JOIN<=
/p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>Description: R=
eturns
only the rows where there is a match in both tables.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>SELECT
Employees.EmployeeID, Employees.Name, Departments.DepartmentName</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>FROM Employees=
</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>INNER JOIN
Departments ON Employees.DepartmentID =3D Departments.DepartmentID;</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>2. LEFT JOIN (=
LEFT
OUTER JOIN)</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>Description: R=
eturns
all rows from the left table and matched rows from the right table. If no m=
atch
is found, NULLs are returned for columns from the right table.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>SELECT
Employees.EmployeeID, Employees.Name, Departments.DepartmentName</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>FROM Employees=
</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>LEFT JOIN
Departments ON Employees.DepartmentID =3D Departments.DepartmentID;</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>3. RIGHT JOIN =
(RIGHT
OUTER JOIN)</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>Description: R=
eturns
all rows from the right table and matched rows from the left table. If no m=
atch
is found, NULLs are returned for columns from the left table.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>SELECT
Employees.EmployeeID, Employees.Name, Departments.DepartmentName</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>FROM Employees=
</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>RIGHT JOIN
Departments ON Employees.DepartmentID =3D Departments.DepartmentID;</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>4. FULL OUTER =
JOIN</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>Description: R=
eturns
all rows when there is a match in one of the tables. Rows that do not have a
match in either table will have NULLs for missing columns.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>SELECT
Employees.EmployeeID, Employees.Name, Departments.DepartmentName</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>FROM Employees=
</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>FULL OUTER JOIN
Departments ON Employees.DepartmentID =3D Departments.DepartmentID;</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>5. CROSS JOIN<=
/p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>Description: R=
eturns
the Cartesian product of the two tables, i.e., all possible combinations of
rows.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>SELECT
Employees.EmployeeID, Employees.Name, Departments.DepartmentName</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>FROM Employees=
</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>CROSS JOIN
Departments;</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>6. SELF JOIN</=
p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>Description: J=
oins a
table with itself. Useful for querying hierarchical data or comparing rows
within the same table.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>SELECT e1.Empl=
oyeeID
AS Emp1ID, e1.Name AS Emp1Name, e2.EmployeeID AS Emp2ID, e2.Name AS Emp2Nam=
e</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>FROM Employees=
 e1</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>JOIN Employees=
 e2 ON
e1.EmployeeID &lt;&gt; e2.EmployeeID;</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

</div>

</div>

</div>

<p style=3D'margin:0in'>&nbsp;</p>

<p style=3D'margin:0in'>&nbsp;</p>

<p style=3D'margin:0in'>&nbsp;</p>

<div style=3D'direction:ltr;border-width:100%'>

<div style=3D'direction:ltr;margin-top:0in;margin-left:0in;width:7.5888in'>

<div style=3D'direction:ltr;margin-top:0in;margin-left:0in;width:4.9694in'>

<p style=3D'margin:0in;font-family:"Calibri Light";font-size:20.0pt'>10.&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Use
case when self-join is required.</p>

</div>

<div style=3D'direction:ltr;margin-top:.0423in;margin-left:0in;width:2.2541=
in'>

<p style=3D'margin:0in;font-family:Calibri;font-size:10.0pt;color:#767676'>=
Tuesday,
July 30, 2024</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:10.0pt;color:#767676'>=
11:28
AM</p>

</div>

<div style=3D'direction:ltr;margin-top:.684in;margin-left:0in;width:7.5888i=
n'>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>A self join is=
 used
to join a table with itself. This is particularly useful in scenarios where
there is a need to compare rows within the same table, such as hierarchical
data, comparisons between rows, and finding related records within the same
table.</p>

</div>

</div>

</div>

<p style=3D'margin:0in'>&nbsp;</p>

<p style=3D'margin:0in'>&nbsp;</p>

<p style=3D'margin:0in'>&nbsp;</p>

<div style=3D'direction:ltr;border-width:100%'>

<div style=3D'direction:ltr;margin-top:0in;margin-left:0in;width:7.55in'>

<div style=3D'direction:ltr;margin-top:0in;margin-left:0in;width:3.109in'>

<p style=3D'margin:0in;font-family:"Calibri Light";font-size:20.0pt'>11.&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;What
is subquery?</p>

</div>

<div style=3D'direction:ltr;margin-top:.0423in;margin-left:0in;width:2.2541=
in'>

<p style=3D'margin:0in;font-family:Calibri;font-size:10.0pt;color:#767676'>=
Tuesday,
July 30, 2024</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:10.0pt;color:#767676'>=
11:31
AM</p>

</div>

<div style=3D'direction:ltr;margin-top:.434in;margin-left:0in;width:7.55in'>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>A subquery (or=
 inner
query) is a query nested within another query, such as a SELECT, INSERT,
UPDATE, or DELETE statement, or inside another subquery. Subqueries are use=
d to
perform operations that need multiple steps or to break down complex queries
into more manageable parts.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>&nbsp;</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>SELECT Name</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>FROM Employees=
</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>WHERE Departme=
ntID
IN (SELECT DepartmentID FROM Departments WHERE Location =3D 'New York');</p>

</div>

</div>

</div>

<p style=3D'margin:0in'>&nbsp;</p>

<p style=3D'margin:0in'>&nbsp;</p>

<p style=3D'margin:0in'>&nbsp;</p>

<div style=3D'direction:ltr;border-width:100%'>

<div style=3D'direction:ltr;margin-top:0in;margin-left:0in;width:7.5333in'>

<div style=3D'direction:ltr;margin-top:0in;margin-left:0in;width:4.2333in'>

<p style=3D'margin:0in;font-family:"Calibri Light";font-size:20.0pt'>12.&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;What
is corelated subquery?</p>

</div>

<div style=3D'direction:ltr;margin-top:.0423in;margin-left:0in;width:2.2541=
in'>

<p style=3D'margin:0in;font-family:Calibri;font-size:10.0pt;color:#767676'>=
Tuesday,
July 30, 2024</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:10.0pt;color:#767676'>=
11:34
AM</p>

</div>

<div style=3D'direction:ltr;margin-top:.434in;margin-left:0in;width:7.5333i=
n'>

<p style=3D'margin:0in;font-family:Calibri;font-size:16.0pt'>A correlated
subquery is a subquery that references columns from the outer query. Becaus=
e of
this reference, the subquery is evaluated once for each row processed by the
outer query. This makes correlated subqueries different from regular
subqueries, which are executed only once and then provide a result to the o=
uter
query.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:16.0pt'>&nbsp;</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:16.0pt'>SELECT e1.Name,
e1.Salary, e1.DepartmentID</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:16.0pt'>FROM Employees=
 e1</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:16.0pt'>WHERE e1.Salar=
y &gt;
(SELECT AVG(e2.Salary) FROM Employees e2 WHERE e2.DepartmentID =3D
e1.DepartmentID);</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:16.0pt'>&nbsp;</p>

</div>

</div>

</div>

<p style=3D'margin:0in'>&nbsp;</p>

<p style=3D'margin:0in'>&nbsp;</p>

<p style=3D'margin:0in'>&nbsp;</p>

<div style=3D'direction:ltr;border-width:100%'>

<div style=3D'direction:ltr;margin-top:0in;margin-left:0in;width:7.5in'>

<div style=3D'direction:ltr;margin-top:0in;margin-left:0in;width:2.5784in'>

<p style=3D'margin:0in;font-family:"Calibri Light";font-size:20.0pt'>13.&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;What
is CTE? </p>

</div>

<div style=3D'direction:ltr;margin-top:.0423in;margin-left:0in;width:2.2541=
in'>

<p style=3D'margin:0in;font-family:Calibri;font-size:10.0pt;color:#767676'>=
Tuesday,
July 30, 2024</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:10.0pt;color:#767676'>=
11:37
AM</p>

</div>

<div style=3D'direction:ltr;margin-top:.684in;margin-left:.25in;width:7.25i=
n'>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>A Common Table
Expression (CTE) is a temporary result set defined within the execution sco=
pe
of a SELECT, INSERT, UPDATE, or DELETE statement. It is particularly useful=
 for
simplifying complex queries, improving readability, and making recursive
queries easier to write and understand.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>&nbsp;</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>WITH cte_name
(column1, column2, ...)</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>AS (</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'><span
style=3D'mso-spacerun:yes'>    </span>-- CTE definition</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'><span
style=3D'mso-spacerun:yes'>    </span>SELECT ...</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>)</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>-- Using the C=
TE</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>SELECT ...</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>FROM cte_name<=
/p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>WHERE ...;</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

</div>

</div>

</div>

<p style=3D'margin:0in'>&nbsp;</p>

<p style=3D'margin:0in'>&nbsp;</p>

<p style=3D'margin:0in'>&nbsp;</p>

<div style=3D'direction:ltr;border-width:100%'>

<div style=3D'direction:ltr;margin-top:0in;margin-left:0in;width:7.5111in'>

<div style=3D'direction:ltr;margin-top:0in;margin-left:0in;width:3.5395in'>

<p style=3D'margin:0in;font-family:"Calibri Light";font-size:20.0pt'>14.&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;What
is derived table?</p>

</div>

<div style=3D'direction:ltr;margin-top:.0423in;margin-left:0in;width:2.2541=
in'>

<p style=3D'margin:0in;font-family:Calibri;font-size:10.0pt;color:#767676'>=
Tuesday,
July 30, 2024</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:10.0pt;color:#767676'>=
11:41
AM</p>

</div>

<div style=3D'direction:ltr;margin-top:.434in;margin-left:.25in;width:7.261=
1in'>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>A derived tabl=
e is a
subquery that appears in the FROM clause of a SQL query. It is essentially a
temporary table that is created and used within the context of a single que=
ry.
Derived tables are useful for breaking down complex queries into simpler, m=
ore
manageable parts and can often help improve the readability and structure o=
f a
query.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>&nbsp;</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>&nbsp;</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>SELECT Departm=
entID,
TotalSales</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>FROM (</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'><span
style=3D'mso-spacerun:yes'>    </span>SELECT DepartmentID, SUM(Amount) AS
TotalSales</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'><span
style=3D'mso-spacerun:yes'>    </span>FROM Sales</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'><span
style=3D'mso-spacerun:yes'>    </span>GROUP BY DepartmentID</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>) AS Departmen=
tSales</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>WHERE TotalSal=
es
&gt; 200;</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

</div>

</div>

</div>

<p style=3D'margin:0in'>&nbsp;</p>

<p style=3D'margin:0in'>&nbsp;</p>

<p style=3D'margin:0in'>&nbsp;</p>

<div style=3D'direction:ltr;border-width:100%'>

<div style=3D'direction:ltr;margin-top:0in;margin-left:0in;width:6.0777in'>

<div style=3D'direction:ltr;margin-top:0in;margin-left:0in;width:6.0777in'>

<p style=3D'margin:0in;font-family:"Calibri Light";font-size:20.0pt'>15.&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Find
third highest employee based on salary?</p>

</div>

<div style=3D'direction:ltr;margin-top:.0423in;margin-left:0in;width:2.2541=
in'>

<p style=3D'margin:0in;font-family:Calibri;font-size:10.0pt;color:#767676'>=
Tuesday,
July 30, 2024</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:10.0pt;color:#767676'>=
11:44
AM</p>

</div>

<div style=3D'direction:ltr;margin-top:.684in;margin-left:.25in;width:1.926=
3in'>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>SELECT Name, S=
alary</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>FROM Employees=
</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>ORDER BY Salar=
y DESC</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>LIMIT 1 OFFSET=
 2;</p>

</div>

</div>

</div>

<p style=3D'margin:0in'>&nbsp;</p>

<p style=3D'margin:0in'>&nbsp;</p>

<p style=3D'margin:0in'>&nbsp;</p>

<div style=3D'direction:ltr;border-width:100%'>

<div style=3D'direction:ltr;margin-top:0in;margin-left:0in;width:7.9798in'>

<div style=3D'direction:ltr;margin-top:0in;margin-left:0in;width:7.9798in'>

<p style=3D'margin:0in;font-family:"Calibri Light";font-size:20.0pt'>16.&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Find
third highest employee based on salary<span style=3D'mso-spacerun:yes'> 
</span>per department?</p>

</div>

<div style=3D'direction:ltr;margin-top:.0423in;margin-left:0in;width:2.2541=
in'>

<p style=3D'margin:0in;font-family:Calibri;font-size:10.0pt;color:#767676'>=
Tuesday,
July 30, 2024</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:10.0pt;color:#767676'>=
11:47
AM</p>

</div>

<div style=3D'direction:ltr;margin-top:.684in;margin-left:.25in;width:7.25i=
n'>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>WITH RankedSal=
aries
AS (</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'><span
style=3D'mso-spacerun:yes'>    </span>SELECT</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'><span
style=3D'mso-spacerun:yes'>        </span>EmployeeID,</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'><span
style=3D'mso-spacerun:yes'>        </span>Name,</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'><span
style=3D'mso-spacerun:yes'>        </span>Salary,</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'><span
style=3D'mso-spacerun:yes'>        </span>DepartmentID,</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'><span
style=3D'mso-spacerun:yes'>        </span>DENSE_RANK() OVER (PARTITI=
ON BY
DepartmentID ORDER BY Salary DESC) AS SalaryRank</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'><span
style=3D'mso-spacerun:yes'>    </span>FROM Employees</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>)</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>SELECT</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'><span
style=3D'mso-spacerun:yes'>    </span>EmployeeID,</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'><span
style=3D'mso-spacerun:yes'>    </span>Name,</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'><span
style=3D'mso-spacerun:yes'>    </span>Salary,</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'><span
style=3D'mso-spacerun:yes'>    </span>DepartmentID</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>FROM RankedSal=
aries</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>WHERE SalaryRa=
nk =3D
3;</p>

</div>

</div>

</div>

<p style=3D'margin:0in'>&nbsp;</p>

<p style=3D'margin:0in'>&nbsp;</p>

<p style=3D'margin:0in'>&nbsp;</p>

<div style=3D'direction:ltr;border-width:100%'>

<div style=3D'direction:ltr;margin-top:0in;margin-left:0in;width:6.393in'>

<div style=3D'direction:ltr;margin-top:0in;margin-left:0in;width:6.393in'>

<p style=3D'margin:0in;font-family:"Calibri Light";font-size:20.0pt'>17.&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;How
to find duplicate values in a single column?</p>

</div>

<div style=3D'direction:ltr;margin-top:.0423in;margin-left:0in;width:2.2541=
in'>

<p style=3D'margin:0in;font-family:Calibri;font-size:10.0pt;color:#767676'>=
Tuesday,
July 30, 2024</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:10.0pt;color:#767676'>=
11:49
AM</p>

</div>

<div style=3D'direction:ltr;margin-top:.434in;margin-left:0in;width:2.4715i=
n'>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>SELECT *</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>FROM Employees=
</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>WHERE Name IN =
(</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'><span
style=3D'mso-spacerun:yes'>    </span>SELECT Name</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'><span
style=3D'mso-spacerun:yes'>    </span>FROM Employees</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'><span
style=3D'mso-spacerun:yes'>    </span>GROUP BY Name</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'><span
style=3D'mso-spacerun:yes'>    </span>HAVING COUNT(*) &gt; 1</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>);</p>

</div>

</div>

</div>

<p style=3D'margin:0in'>&nbsp;</p>

<p style=3D'margin:0in'>&nbsp;</p>

<p style=3D'margin:0in'>&nbsp;</p>

<div style=3D'direction:ltr;border-width:100%'>

<div style=3D'direction:ltr;margin-top:0in;margin-left:0in;width:6.6722in'>

<div style=3D'direction:ltr;margin-top:0in;margin-left:0in;width:6.6722in'>

<p style=3D'margin:0in;font-family:"Calibri Light";font-size:20.0pt'>18.&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;How
to find duplicate values in a multiple column?</p>

</div>

<div style=3D'direction:ltr;margin-top:.0423in;margin-left:0in;width:2.2541=
in'>

<p style=3D'margin:0in;font-family:Calibri;font-size:10.0pt;color:#767676'>=
Tuesday,
July 30, 2024</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:10.0pt;color:#767676'>=
11:50
AM</p>

</div>

<div style=3D'direction:ltr;margin-top:.434in;margin-left:0in;width:2.6472i=
n'>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>SELECT *</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>FROM Employees=
</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>WHERE (Name, S=
alary)
IN (</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'><span
style=3D'mso-spacerun:yes'>    </span>SELECT Name, Salary</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'><span
style=3D'mso-spacerun:yes'>    </span>FROM Employees</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'><span
style=3D'mso-spacerun:yes'>    </span>GROUP BY Name, Salary</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'><span
style=3D'mso-spacerun:yes'>    </span>HAVING COUNT(*) &gt; 1</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>);</p>

</div>

</div>

</div>

<p style=3D'margin:0in'>&nbsp;</p>

<p style=3D'margin:0in'>&nbsp;</p>

<p style=3D'margin:0in'>&nbsp;</p>

<div style=3D'direction:ltr;border-width:100%'>

<div style=3D'direction:ltr;margin-top:0in;margin-left:0in;width:11.8125in'>

<div style=3D'direction:ltr;margin-top:0in;margin-left:0in;width:4.0277in'>

<p style=3D'margin:0in;font-family:"Calibri Light";font-size:20.0pt'>19.&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;What
are ACID properties?</p>

</div>

<div style=3D'direction:ltr;margin-top:.0423in;margin-left:0in;width:2.175i=
n'>

<p style=3D'margin:0in;font-family:Calibri;font-size:10.0pt;color:#767676'>=
Tuesday,
July 30, 2024</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:10.0pt;color:#767676'>=
5:13
PM</p>

</div>

<table border=3D0 cellpadding=3D0 cellspacing=3D0 cols=3D3 valign=3Dtop sty=
le=3D'direction:
 ltr;border-collapse:collapse;border-width:0pt;margin-top:.434in;margin-lef=
t:
 0in;width:11.8125in'>
 <tr>
  <td valign=3Dtop style=3D'vertical-align:top;margin:0in;padding:0pt;width=
:1px;
  height:1px;font-size:1pt'>
  <p style=3D'font-size:1pt'>&nbsp;</p>
  </td>
  <td valign=3Dtop style=3D'vertical-align:top;margin:0in;padding:0pt;width=
:7.5541in;
  height:1px;font-size:1pt'>
  <p style=3D'font-size:1pt'></p>
  </td>
  <td valign=3Dtop style=3D'vertical-align:top;margin:0in;padding:0pt;width=
:.4451in;
  height:1px;font-size:1pt'>
  <p style=3D'font-size:1pt'></p>
  </td>
  <td valign=3Dtop style=3D'vertical-align:top;margin:0in;padding:0pt;width=
:3.8125in;
  height:1px;font-size:1pt'>
  <p style=3D'font-size:1pt'></p>
  </td>
 </tr>
 <tr>
  <td valign=3Dtop style=3D'vertical-align:top;margin:0in;padding:0pt;width=
:1px;
  height:2.1437in;font-size:1pt'>
  <p style=3D'font-size:1pt'>&nbsp;</p>
  </td>
  <td rowspan=3D2 valign=3Dtop style=3D'vertical-align:top;margin:0in;paddi=
ng:0pt;
  width:7.5541in;height:3.093in'>
  <p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>Consider a
  scenario where a user wants to transfer money from Account A to Account B=
.</p>
  <p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>&nbsp;</p>
  <p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>Atomicity: T=
he
  transaction involves debiting Account A and crediting Account B. Atomicity
  ensures that either both operations are completed or none.</p>
  <p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>Consistency:=
 The
  total amount of money in the system remains unchanged. If the transfer am=
ount
  is $100, Account A is debited by $100 and Account B is credited by $100,
  maintaining overall consistency.</p>
  <p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>Isolation: If
  another transaction is trying to access Account A or Account B during the
  transfer, isolation ensures that this concurrent transaction does not
  interfere and the final state is consistent as if the transactions were
  performed one after the other.</p>
  <p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>Durability: =
Once
  the transfer is completed and the transaction is committed, the changes (=
the
  debit and the credit) are permanently recorded in the database. Even if t=
he
  system crashes right after the commit, the changes will not be lost.</p>
  </td>
  <td valign=3Dtop style=3D'vertical-align:top;margin:0in;padding:0pt;width=
:.4451in;
  height:2.1437in;font-size:1pt'>
  <p style=3D'font-size:1pt'></p>
  </td>
  <td valign=3Dtop style=3D'vertical-align:top;margin:0in;padding:0pt;width=
:3.8125in;
  height:2.1437in'>
  <p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>Summary</p>
  <p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>Atomicity:
  All-or-nothing execution of transactions.</p>
  <p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>Consistency:
  Ensures data integrity before and after a transaction.</p>
  <p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>Isolation:
  Transactions are executed independently.</p>
  <p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>Durability:
  Committed transactions are permanently recorded.</p>
  </td>
 </tr>
 <tr>
  <td valign=3Dtop style=3D'vertical-align:top;margin:0in;padding:0pt;width=
:1px;
  height:.9493in;font-size:1pt'>
  <p style=3D'font-size:1pt'>&nbsp;</p>
  </td>
  <td valign=3Dtop style=3D'vertical-align:top;margin:0in;padding:0pt;width=
:.4451in;
  height:.9493in;font-size:1pt'>
  <p style=3D'font-size:1pt'></p>
  </td>
  <td valign=3Dtop style=3D'vertical-align:top;margin:0in;padding:0pt;width=
:3.8125in;
  height:.9493in;font-size:1pt'>
  <p style=3D'font-size:1pt'></p>
  </td>
 </tr>
</table>

</div>

</div>

<p style=3D'margin:0in'>&nbsp;</p>

<p style=3D'margin:0in'>&nbsp;</p>

<p style=3D'margin:0in'>&nbsp;</p>

<div style=3D'direction:ltr;border-width:100%'>

<div style=3D'direction:ltr;margin-top:0in;margin-left:0in;width:7.25in'>

<div style=3D'direction:ltr;margin-top:0in;margin-left:0in;width:4.6819in'>

<p style=3D'margin:0in;font-family:"Calibri Light";font-size:20.0pt'>20.&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Diff
between union and union all</p>

</div>

<div style=3D'direction:ltr;margin-top:.0423in;margin-left:0in;width:2.175i=
n'>

<p style=3D'margin:0in;font-family:Calibri;font-size:10.0pt;color:#767676'>=
Tuesday,
July 30, 2024</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:10.0pt;color:#767676'>=
5:27
PM</p>

</div>

<div style=3D'direction:ltr;margin-top:.434in;margin-left:.75in;width:6.5in=
'>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>UNION</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>Purpose: Combi=
nes
the results of two or more SELECT statements into a single result set and
removes duplicate rows.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>UNION ALL</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>Purpose: Combi=
nes
the results of two or more SELECT statements into a single result set,
including all duplicate rows.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

</div>

</div>

</div>

<p style=3D'margin:0in'>&nbsp;</p>

<p style=3D'margin:0in'>&nbsp;</p>

<p style=3D'margin:0in'>&nbsp;</p>

<div style=3D'direction:ltr;border-width:100%'>

<div style=3D'direction:ltr;margin-top:0in;margin-left:0in;width:7.5in'>

<div style=3D'direction:ltr;margin-top:0in;margin-left:0in;width:5.6236in'>

<p style=3D'margin:0in;font-family:"Calibri Light";font-size:20.0pt'>21.&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Diff
between primary key and unique key</p>

</div>

<div style=3D'direction:ltr;margin-top:.0423in;margin-left:0in;width:2.175i=
n'>

<p style=3D'margin:0in;font-family:Calibri;font-size:10.0pt;color:#767676'>=
Tuesday,
July 30, 2024</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:10.0pt;color:#767676'>=
5:32
PM</p>

</div>

<div style=3D'direction:ltr;margin-top:.684in;margin-left:.25in;width:7.25i=
n'>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>Primary Key: E=
nsures
uniqueness and non-nullability, creating a unique identifier for table rows.
Only one primary key is allowed per table.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>Unique Key: En=
sures
uniqueness but allows nullability. Multiple unique keys can be defined per
table to enforce uniqueness on multiple columns.</p>

</div>

</div>

</div>

<p style=3D'margin:0in'>&nbsp;</p>

<p style=3D'margin:0in'>&nbsp;</p>

<p style=3D'margin:0in'>&nbsp;</p>

<div style=3D'direction:ltr;border-width:100%'>

<div style=3D'direction:ltr;margin-top:0in;margin-left:0in;width:7.5131in'>

<div style=3D'direction:ltr;margin-top:0in;margin-left:0in;width:4.7493in'>

<p style=3D'margin:0in;font-family:"Calibri Light";font-size:20.0pt'>22.&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Diff
between truncate and delete</p>

</div>

<div style=3D'direction:ltr;margin-top:.0423in;margin-left:0in;width:2.175i=
n'>

<p style=3D'margin:0in;font-family:Calibri;font-size:10.0pt;color:#767676'>=
Tuesday,
July 30, 2024</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:10.0pt;color:#767676'>=
5:34
PM</p>

</div>

<div style=3D'direction:ltr;margin-top:.684in;margin-left:.25in;width:7.263=
1in'>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>TRUNCATE: Fast,
minimal logging, resets identity columns, does not activate triggers, used =
for
removing all rows.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>DELETE: Slower=
, full
logging, does not reset identity columns, activates triggers, used for remo=
ving
specific rows based on conditions.</p>

</div>

</div>

</div>

<p style=3D'margin:0in'>&nbsp;</p>

<p style=3D'margin:0in'>&nbsp;</p>

<p style=3D'margin:0in'>&nbsp;</p>

<div style=3D'direction:ltr;border-width:100%'>

<div style=3D'direction:ltr;margin-top:0in;margin-left:0in;width:7.2875in'>

<div style=3D'direction:ltr;margin-top:0in;margin-left:0in;width:4.5291in'>

<p style=3D'margin:0in;font-family:"Calibri Light";font-size:20.0pt'>23.&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Diff
between having and where</p>

</div>

<div style=3D'direction:ltr;margin-top:.0423in;margin-left:0in;width:2.175i=
n'>

<p style=3D'margin:0in;font-family:Calibri;font-size:10.0pt;color:#767676'>=
Tuesday,
July 30, 2024</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:10.0pt;color:#767676'>=
5:36
PM</p>

</div>

<div style=3D'direction:ltr;margin-top:.684in;margin-left:.25in;width:7.037=
5in'>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>WHERE: Filters=
 rows
before any grouping; cannot use aggregate functions directly.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>&nbsp;</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>HAVING: Filters
groups after grouping; can use aggregate functions.</p>

</div>

</div>

</div>

<p style=3D'margin:0in'>&nbsp;</p>

<p style=3D'margin:0in'>&nbsp;</p>

<p style=3D'margin:0in'>&nbsp;</p>

<div style=3D'direction:ltr;border-width:100%'>

<div style=3D'direction:ltr;margin-top:0in;margin-left:0in;width:6.9361in'>

<div style=3D'direction:ltr;margin-top:0in;margin-left:0in;width:4.0756in'>

<p style=3D'margin:0in;font-family:"Calibri Light";font-size:20.0pt'>24.&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SQL
query execution order.</p>

</div>

<div style=3D'direction:ltr;margin-top:.0423in;margin-left:0in;width:2.175i=
n'>

<p style=3D'margin:0in;font-family:Calibri;font-size:10.0pt;color:#767676'>=
Tuesday,
July 30, 2024</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:10.0pt;color:#767676'>=
5:38
PM</p>

</div>

<div style=3D'direction:ltr;margin-top:.684in;margin-left:.25in;width:6.686=
1in'>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>FROM: Identifi=
es the
source tables.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>ON: Specifies =
join
conditions.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>JOIN: Combines=
 data
from multiple tables.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>WHERE: Filters
individual rows.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>GROUP BY: Grou=
ps
rows for aggregation.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>HAVING: Filters
groups based on aggregate conditions.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>SELECT: Choose=
s the
columns to display.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>DISTINCT: Remo=
ves
duplicate rows.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>ORDER BY: Sort=
s the
result set.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>LIMIT / OFFSET:
Limits the number of rows returned or sets the starting point.</p>

</div>

</div>

</div>

<p style=3D'margin:0in'>&nbsp;</p>

<p style=3D'margin:0in'>&nbsp;</p>

<p style=3D'margin:0in'>&nbsp;</p>

<div style=3D'direction:ltr;border-width:100%'>

<div style=3D'direction:ltr;margin-top:0in;margin-left:0in;width:7.6041in'>

<div style=3D'direction:ltr;margin-top:0in;margin-left:0in;width:7.4833in'>

<p style=3D'margin:0in;font-family:"Calibri Light";font-size:20.0pt'>25.&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;What
are indexes? Types of Indexes and their differences.</p>

</div>

<div style=3D'direction:ltr;margin-top:.0423in;margin-left:0in;width:2.175i=
n'>

<p style=3D'margin:0in;font-family:Calibri;font-size:10.0pt;color:#767676'>=
Tuesday,
July 30, 2024</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:10.0pt;color:#767676'>=
6:39
PM</p>

</div>

<div style=3D'direction:ltr;margin-top:.434in;margin-left:.25in;width:7.354=
1in'>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>Indexes are sp=
ecial
database objects that enhance the speed of data retrieval operations on a
database table at the cost of additional storage space and potential decrea=
se
in performance during data modification operations (INSERT, UPDATE, DELETE).
They work similarly to indexes in books, allowing the database to find rows
more quickly and efficiently.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>&nbsp;</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>Clustered Inde=
x:</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>Purpose: Deter=
mines
physical order.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>Count per Tabl=
e:
One.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>Usage: Primary=
 keys,
range queries.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>&nbsp;</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>Non-Clustered =
Index:</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>Purpose: Separ=
ate
index structure.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>Count per Tabl=
e:
Multiple.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>Usage: Improve=
 query
performance on columns other than the clustered index.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>&nbsp;</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>Unique Index:<=
/p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>Purpose: Enfor=
ce
uniqueness.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>Count per Tabl=
e:
Multiple.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>Usage: Ensure =
unique
column values.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>&nbsp;</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>Full-Text Inde=
x:</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>Purpose: Optim=
ize
text searches.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>Count per Tabl=
e:
Depends on RDBMS.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>Usage: Text se=
arch
applications.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>&nbsp;</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>Spatial Index:=
</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>Purpose: Optim=
ize
spatial data queries.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>Count per Tabl=
e:
Depends on RDBMS.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>Usage: GIS,
location-based services.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>&nbsp;</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>Bitmap Index:<=
/p>

<p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>Purpose: Effic=
ient
for low cardinality.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>Count per Tabl=
e:
Multiple (depends on RDBMS).</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>Usage: Data
warehousing.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>&nbsp;</p>

</div>

</div>

</div>

<p style=3D'margin:0in'>&nbsp;</p>

<p style=3D'margin:0in'>&nbsp;</p>

<p style=3D'margin:0in'>&nbsp;</p>

<div style=3D'direction:ltr;border-width:100%'>

<div style=3D'direction:ltr;margin-top:0in;margin-left:0in;width:8.0in'>

<div style=3D'direction:ltr;margin-top:0in;margin-left:0in;width:8.0in'>

<p style=3D'margin:0in;font-family:"Calibri Light";font-size:20.0pt'>26.&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;What
is surrogate key? Give example where you used it and how.</p>

</div>

<div style=3D'direction:ltr;margin-top:.0423in;margin-left:0in;width:2.175i=
n'>

<p style=3D'margin:0in;font-family:Calibri;font-size:10.0pt;color:#767676'>=
Tuesday,
July 30, 2024</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:10.0pt;color:#767676'>=
6:44
PM</p>

</div>

<div style=3D'direction:ltr;margin-top:.434in;margin-left:.25in;width:7.25i=
n'>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>A surrogate ke=
y is
an artificially generated key used to uniquely identify each record in a
database table. It is not derived from the application data and is typically
implemented as an auto-incrementing integer or a universally unique identif=
ier
(UUID). Surrogate keys are used instead of natural keys (which are derived =
from
the actual data) to simplify data management and ensure that each record ha=
s a
unique, immutable identifier.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>&nbsp;</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>Characteristic=
s of
Surrogate Keys</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>Uniqueness:
Guarantees that each record in the table has a unique identifier.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>Immutability: =
Once
assigned, the surrogate key does not change, even if other data in the reco=
rd
changes.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>System-Generat=
ed:
Typically auto-incremented integers or UUIDs generated by the database syst=
em.</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>Independence: =
Not
derived from application data, which makes them immune to changes in busine=
ss
logic or data values.</p>

</div>

</div>

</div>

<p style=3D'margin:0in'>&nbsp;</p>

<p style=3D'margin:0in'>&nbsp;</p>

<p style=3D'margin:0in'>&nbsp;</p>

<div style=3D'direction:ltr;border-width:100%'>

<div style=3D'direction:ltr;margin-top:0in;margin-left:0in;width:13.3437in'>

<div style=3D'direction:ltr;margin-top:0in;margin-left:0in;width:4.1833in'>

<p style=3D'margin:0in;font-family:"Calibri Light";font-size:20.0pt'>27.&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ways
to optimize sql query?</p>

</div>

<div style=3D'direction:ltr;margin-top:.0423in;margin-left:0in;width:2.175i=
n'>

<p style=3D'margin:0in;font-family:Calibri;font-size:10.0pt;color:#767676'>=
Tuesday,
July 30, 2024</p>

<p style=3D'margin:0in;font-family:Calibri;font-size:10.0pt;color:#767676'>=
6:45
PM</p>

</div>

<table border=3D0 cellpadding=3D0 cellspacing=3D0 cols=3D3 valign=3Dtop sty=
le=3D'direction:
 ltr;border-collapse:collapse;border-width:0pt;margin-top:.434in;margin-lef=
t:
 0in;width:13.3437in'>
 <tr>
  <td valign=3Dtop style=3D'vertical-align:top;margin:0in;padding:0pt;width=
:1px;
  height:1px;font-size:1pt'>
  <p style=3D'font-size:1pt'>&nbsp;</p>
  </td>
  <td valign=3Dtop style=3D'vertical-align:top;margin:0in;padding:0pt;width=
:6.6041in;
  height:1px;font-size:1pt'>
  <p style=3D'font-size:1pt'></p>
  </td>
  <td valign=3Dtop style=3D'vertical-align:top;margin:0in;padding:0pt;width=
:.1451in;
  height:1px;font-size:1pt'>
  <p style=3D'font-size:1pt'></p>
  </td>
  <td valign=3Dtop style=3D'vertical-align:top;margin:0in;padding:0pt;width=
:6.5937in;
  height:1px;font-size:1pt'>
  <p style=3D'font-size:1pt'></p>
  </td>
 </tr>
 <tr>
  <td valign=3Dtop style=3D'vertical-align:top;margin:0in;padding:0pt;width=
:1px;
  height:6.1111in;font-size:1pt'>
  <p style=3D'font-size:1pt'>&nbsp;</p>
  </td>
  <td rowspan=3D2 valign=3Dtop style=3D'vertical-align:top;margin:0in;paddi=
ng:0pt;
  width:6.6041in;height:7.3486in'>
  <p style=3D'margin:0in;font-family:Calibri;font-size:12.0pt'>Optimizing S=
QL
  queries is crucial for improving the performance of database operations,
  especially when dealing with large datasets. Here are several strategies =
and
  techniques to optimize SQL queries:</p>
  <p style=3D'margin:0in;font-family:Calibri;font-size:12.0pt'>&nbsp;</p>
  <p style=3D'margin:0in;font-family:Calibri;font-size:12.0pt'>1. Use Index=
es</p>
  <p style=3D'margin:0in;font-family:Calibri;font-size:12.0pt'>Create Index=
es:
  Indexes can significantly speed up data retrieval operations.</p>
  <p style=3D'margin:0in;font-family:Calibri;font-size:12.0pt'>Use Appropri=
ate
  Index Types: Choose the right type of index (e.g., clustered, non-cluster=
ed)
  based on your query patterns.</p>
  <p style=3D'margin:0in;font-family:Calibri;font-size:12.0pt'>&nbsp;</p>
  <p style=3D'margin:0in;font-family:Calibri;font-size:12.0pt'>2. Optimize =
Joins</p>
  <p style=3D'margin:0in;font-family:Calibri;font-size:12.0pt'>Use Appropri=
ate
  Join Types: Select the most efficient join type for your query (INNER JOI=
N,
  LEFT JOIN, RIGHT JOIN, etc.).</p>
  <p style=3D'margin:0in;font-family:Calibri;font-size:12.0pt'>Ensure Proper
  Indexing on Join Columns: Index the columns used in join conditions.</p>
  <p style=3D'margin:0in;font-family:Calibri;font-size:12.0pt'>&nbsp;</p>
  <p style=3D'margin:0in;font-family:Calibri;font-size:12.0pt'>3. Avoid Sel=
ect *</p>
  <p style=3D'margin:0in;font-family:Calibri;font-size:12.0pt'>Select Only
  Necessary Columns: Reduce the amount of data retrieved by selecting only =
the
  columns you need.</p>
  <p style=3D'margin:0in;font-family:Calibri;font-size:12.0pt'>&nbsp;</p>
  <p style=3D'margin:0in;font-family:Calibri;font-size:12.0pt'>4. Use WHERE
  Clauses Effectively</p>
  <p style=3D'margin:0in;font-family:Calibri;font-size:12.0pt'>Filter Data =
Early:
  Use WHERE clauses to filter rows as early as possible in the query execut=
ion
  process.</p>
  <p style=3D'margin:0in;font-family:Calibri;font-size:12.0pt'>&nbsp;</p>
  <p style=3D'margin:0in;font-family:Calibri;font-size:12.0pt'>5. Use Prope=
r Data
  Types</p>
  <p style=3D'margin:0in;font-family:Calibri;font-size:12.0pt'>Match Data T=
ypes:
  Ensure that the data types of columns and variables match to avoid
  unnecessary conversions.</p>
  <p style=3D'margin:0in;font-family:Calibri;font-size:12.0pt'>Use Efficien=
t Data
  Types: Choose data types that are appropriate for the data being stored a=
nd
  that minimize storage space.</p>
  <p style=3D'margin:0in;font-family:Calibri;font-size:12.0pt'>&nbsp;</p>
  <p style=3D'margin:0in;font-family:Calibri;font-size:12.0pt'>6. Avoid Fun=
ctions
  on Indexed Columns</p>
  <p style=3D'margin:0in;font-family:Calibri;font-size:12.0pt'>Do Not Use
  Functions on Indexed Columns in WHERE Clauses: This can prevent the use of
  indexes.</p>
  <p style=3D'margin:0in;font-family:Calibri;font-size:12.0pt'>&nbsp;</p>
  <p style=3D'margin:0in;font-family:Calibri;font-size:12.0pt'>7. Use JOINs
  Instead of Subqueries</p>
  <p style=3D'margin:0in;font-family:Calibri;font-size:12.0pt'>Rewrite Subq=
ueries
  as Joins: In some cases, joins can be more efficient than subqueries.</p>
  <p style=3D'margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>
  <p style=3D'margin:0in;font-family:Calibri;font-size:14.0pt'>&nbsp;</p>
  </td>
  <td valign=3Dtop style=3D'vertical-align:top;margin:0in;padding:0pt;width=
:.1451in;
  height:6.1111in;font-size:1pt'>
  <p style=3D'font-size:1pt'></p>
  </td>
  <td valign=3Dtop style=3D'vertical-align:top;margin:0in;padding:0pt;width=
:6.5937in;
  height:6.1111in'>
  <p style=3D'margin:0in;font-family:Calibri;font-size:12.0pt'>8. Limit the
  Number of Rows Returned</p>
  <p style=3D'margin:0in;font-family:Calibri;font-size:12.0pt'>Use LIMIT/OF=
FSET:
  Fetch only the necessary number of rows</p>
  <p style=3D'margin:0in;font-family:Calibri;font-size:12.0pt'>&nbsp;</p>
  <p style=3D'margin:0in;font-family:Calibri;font-size:12.0pt'>9. Analyze Q=
uery
  Execution Plans</p>
  <p style=3D'margin:0in;font-family:Calibri;font-size:12.0pt'>Use
  EXPLAIN/EXPLAIN ANALYZE: Analyze the query execution plan to identify
  bottlenecks.</p>
  <p style=3D'margin:0in;font-family:Calibri;font-size:12.0pt'>&nbsp;</p>
  <p style=3D'margin:0in;font-family:Calibri;font-size:12.0pt'>10. Optimize=
 ORDER
  BY and GROUP BY Clauses</p>
  <p style=3D'margin:0in;font-family:Calibri;font-size:12.0pt'>Index Column=
s Used
  in ORDER BY and GROUP BY: Index the columns to speed up sorting and group=
ing
  operations.</p>
  <p style=3D'margin:0in;font-family:Calibri;font-size:12.0pt'>&nbsp;</p>
  <p style=3D'margin:0in;font-family:Calibri;font-size:12.0pt'>11. Partition
  Large Tables</p>
  <p style=3D'margin:0in;font-family:Calibri;font-size:12.0pt'>Use Table
  Partitioning: Partition large tables to improve performance and manageabi=
lity</p>
  <p style=3D'margin:0in;font-family:Calibri;font-size:12.0pt'>&nbsp;</p>
  <p style=3D'margin:0in;font-family:Calibri;font-size:12.0pt'>12. Cache Re=
peated
  Queries</p>
  <p style=3D'margin:0in;font-family:Calibri;font-size:12.0pt'>Use Query Ca=
ching:
  Cache the results of frequently executed queries to reduce database load.=
</p>
  <p style=3D'margin:0in;font-family:Calibri;font-size:12.0pt'>&nbsp;</p>
  <p style=3D'margin:0in;font-family:Calibri;font-size:12.0pt'>13. Optimize
  Insert and Update Operations</p>
  <p style=3D'margin:0in;font-family:Calibri;font-size:12.0pt'>Batch Insert=
s and
  Updates: Batch multiple insert or update operations into a single query.<=
/p>
  <p style=3D'margin:0in;font-family:Calibri;font-size:12.0pt'>&nbsp;</p>
  <p style=3D'margin:0in;font-family:Calibri;font-size:12.0pt'>14. Avoid
  Unnecessary Columns in SELECT Clause</p>
  <p style=3D'margin:0in;font-family:Calibri;font-size:12.0pt'>Select Only
  Necessary Columns: Retrieve only the columns needed for the operation.</p>
  <p style=3D'margin:0in;font-family:Calibri;font-size:12.0pt'>&nbsp;</p>
  <p style=3D'margin:0in;font-family:Calibri;font-size:12.0pt'>15. Use EXIS=
TS
  Instead of IN</p>
  <p style=3D'margin:0in;font-family:Calibri;font-size:12.0pt'>Use EXISTS f=
or
  Subqueries: Use EXISTS for better performance in certain cases</p>
  <p style=3D'margin:0in;font-family:Calibri;font-size:12.0pt'>&nbsp;</p>
  <p style=3D'margin:0in;font-family:Calibri;font-size:12.0pt'>16. Denormal=
ize
  When Necessary</p>
  <p style=3D'margin:0in;font-family:Calibri;font-size:12.0pt'>Balance
  Normalization and Performance: In some cases, denormalization can improve
  query performance by reducing the number of joins needed.</p>
  <p style=3D'margin:0in;font-family:Calibri;font-size:12.0pt'>&nbsp;</p>
  <p style=3D'margin:0in;font-family:Calibri;font-size:12.0pt'>&nbsp;</p>
  </td>
 </tr>
 <tr>
  <td valign=3Dtop style=3D'vertical-align:top;margin:0in;padding:0pt;width=
:1px;
  height:1.2375in;font-size:1pt'>
  <p style=3D'font-size:1pt'>&nbsp;</p>
  </td>
  <td valign=3Dtop style=3D'vertical-align:top;margin:0in;padding:0pt;width=
:.1451in;
  height:1.2375in;font-size:1pt'>
  <p style=3D'font-size:1pt'></p>
  </td>
  <td valign=3Dtop style=3D'vertical-align:top;margin:0in;padding:0pt;width=
:6.5937in;
  height:1.2375in;font-size:1pt'>
  <p style=3D'font-size:1pt'></p>
  </td>
 </tr>
</table>

</div>

</div>

<div>

<p style=3D'margin:0in'>&nbsp;</p>

<p style=3D'text-align:left;margin:0in;font-family:Arial;font-size:9pt;
color:#969696;direction:ltr'>Created with OneNote.</p>

</div>

</body>

</html>
